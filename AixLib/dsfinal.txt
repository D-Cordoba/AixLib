#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
     360                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
     720                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  9.9999999999999995E-07   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(565,72)
sin_2.nPorts
sin_2.verifyInputs
sin_2.ports[1].m_flow
sin_2.ports[1].h_outflow
sin_2.flowDirection
sin_2.X_in_internal[1]
sin_2.X_in_internal[2]
sin_2.use_p_in
sin_2.p
sin_2.use_T_in
sin_2.T
sin_2.use_X_in
sin_2.use_Xi_in
sin_2.use_C_in
sin_2.X[1]
sin_2.X[2]
PIn.height
PIn.duration
PIn.offset
PIn.startTime
PIn.y
sou_2.nPorts
sou_2.verifyInputs
sou_2.ports[1].h_outflow
sou_2.flowDirection
sou_2.X_in_internal[1]
sou_2.X_in_internal[2]
sou_2.use_p_in
sou_2.p
sou_2.use_T_in
sou_2.T
sou_2.use_X_in
sou_2.use_Xi_in
sou_2.use_C_in
sou_2.X[1]
sou_2.X[2]
TWat.height
TWat.duration
TWat.offset
TWat.startTime
TWat.y
TDb.k
POut.k
sin_1.nPorts
sin_1.verifyInputs
sin_1.ports[1].m_flow
sin_1.ports[1].p
sin_1.ports[1].h_outflow
sin_1.flowDirection
sin_1.X_in_internal[1]
sin_1.use_p_in
sin_1.p
sin_1.use_T_in
sin_1.T
sin_1.use_X_in
sin_1.use_Xi_in
sin_1.use_C_in
sin_1.X[1]
sou_1.nPorts
sou_1.verifyInputs
sou_1.ports[1].h_outflow
sou_1.flowDirection
sou_1.X_in_internal[1]
sou_1.use_p_in
sou_1.p
sou_1.use_T_in
sou_1.T
sou_1.use_X_in
sou_1.use_Xi_in
sou_1.use_C_in
sou_1.X[1]
trapezoid.amplitude
trapezoid.rising
trapezoid.width
trapezoid.falling
trapezoid.period
trapezoid.nperiod
trapezoid.offset
trapezoid.startTime
trapezoid.T_rising
trapezoid.T_width
trapezoid.T_falling
trapezoid.T_start
trapezoid.count
dynamicHX.allowFlowReversal1
dynamicHX.allowFlowReversal2
dynamicHX.port_a1.h_outflow
dynamicHX.port_b1.h_outflow
dynamicHX.port_a2.h_outflow
dynamicHX.port_a2.Xi_outflow[1]
dynamicHX.port_b2.h_outflow
dynamicHX.port_b2.Xi_outflow[1]
dynamicHX.m1_flow_nominal
dynamicHX.m2_flow_nominal
dynamicHX.m1_flow_small
dynamicHX.m2_flow_small
dynamicHX.show_T
dynamicHX.dp1
dynamicHX.dp2
dynamicHX.state_a1_inflow.T
dynamicHX.state_b1_inflow.T
dynamicHX.state_a2_inflow.T
dynamicHX.state_a2_inflow.X[2]
dynamicHX.state_b2_inflow.T
dynamicHX.state_b2_inflow.X[2]
dynamicHX.computeFlowResistance1
dynamicHX.from_dp1
dynamicHX.dp1_nominal
dynamicHX.linearizeFlowResistance1
dynamicHX.deltaM1
dynamicHX.computeFlowResistance2
dynamicHX.from_dp2
dynamicHX.dp2_nominal
dynamicHX.linearizeFlowResistance2
dynamicHX.deltaM2
dynamicHX.nNodes
dynamicHX.tau1
dynamicHX.tau2
dynamicHX.homotopyInitialization
dynamicHX.energyDynamics
dynamicHX.massDynamics
dynamicHX.p1_start
dynamicHX.T1_start
dynamicHX.X1_start[1]
dynamicHX.p2_start
dynamicHX.T2_start
dynamicHX.X2_start[1]
dynamicHX.X2_start[2]
dynamicHX.Q1_flow
dynamicHX.Q2_flow
dynamicHX.vol1[1].energyDynamics
dynamicHX.vol1[1].massDynamics
dynamicHX.vol1[1].substanceDynamics
dynamicHX.vol1[1].traceDynamics
dynamicHX.vol1[1].p_start
dynamicHX.vol1[1].T_start
dynamicHX.vol1[1].X_start[1]
dynamicHX.vol1[1].mSenFac
dynamicHX.vol1[1].initialize_p
dynamicHX.vol1[1].prescribedHeatFlowRate
dynamicHX.vol1[1].simplify_mWat_flow
dynamicHX.vol1[1].m_flow_nominal
dynamicHX.vol1[1].nPorts
dynamicHX.vol1[1].m_flow_small
dynamicHX.vol1[1].allowFlowReversal
dynamicHX.vol1[1].V
dynamicHX.vol1[1].T
dynamicHX.vol1[1].m
dynamicHX.vol1[1].rho_start
_GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
dynamicHX.vol1[1].state_default.p
dynamicHX.vol1[1].state_default.T
dynamicHX.vol1[1].rho_default
dynamicHX.vol1[1].state_start.p
dynamicHX.vol1[1].state_start.T
dynamicHX.vol1[1].useSteadyStateTwoPort
dynamicHX.vol1[1].heatPort.Q_flow
dynamicHX.vol1[2].energyDynamics
dynamicHX.vol1[2].massDynamics
dynamicHX.vol1[2].substanceDynamics
dynamicHX.vol1[2].traceDynamics
dynamicHX.vol1[2].p_start
dynamicHX.vol1[2].T_start
dynamicHX.vol1[2].X_start[1]
dynamicHX.vol1[2].mSenFac
dynamicHX.vol1[2].initialize_p
dynamicHX.vol1[2].prescribedHeatFlowRate
dynamicHX.vol1[2].simplify_mWat_flow
dynamicHX.vol1[2].m_flow_nominal
dynamicHX.vol1[2].nPorts
dynamicHX.vol1[2].m_flow_small
dynamicHX.vol1[2].allowFlowReversal
dynamicHX.vol1[2].V
dynamicHX.vol1[2].T
dynamicHX.vol1[2].m
dynamicHX.vol1[2].rho_start
dynamicHX.vol1[2].state_default.p
dynamicHX.vol1[2].state_default.T
dynamicHX.vol1[2].rho_default
dynamicHX.vol1[2].state_start.p
dynamicHX.vol1[2].state_start.T
dynamicHX.vol1[2].useSteadyStateTwoPort
dynamicHX.vol1[2].heatPort.Q_flow
dynamicHX.vol2[1].energyDynamics
dynamicHX.vol2[1].massDynamics
dynamicHX.vol2[1].substanceDynamics
dynamicHX.vol2[1].traceDynamics
dynamicHX.vol2[1].p_start
dynamicHX.vol2[1].T_start
dynamicHX.vol2[1].X_start[1]
dynamicHX.vol2[1].X_start[2]
dynamicHX.vol2[1].mSenFac
dynamicHX.vol2[1].initialize_p
dynamicHX.vol2[1].prescribedHeatFlowRate
dynamicHX.vol2[1].simplify_mWat_flow
dynamicHX.vol2[1].m_flow_nominal
dynamicHX.vol2[1].nPorts
dynamicHX.vol2[1].m_flow_small
dynamicHX.vol2[1].allowFlowReversal
dynamicHX.vol2[1].V
dynamicHX.vol2[1].T
dynamicHX.vol2[1].rho_start
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
dynamicHX.vol2[1].state_default.p
dynamicHX.vol2[1].state_default.T
dynamicHX.vol2[1].state_default.X[1]
dynamicHX.vol2[1].state_default.X[2]
dynamicHX.vol2[1].rho_default
dynamicHX.vol2[1].state_start.p
dynamicHX.vol2[1].state_start.T
dynamicHX.vol2[1].state_start.X[1]
dynamicHX.vol2[1].state_start.X[2]
dynamicHX.vol2[1].useSteadyStateTwoPort
dynamicHX.vol2[1].use_C_flow
dynamicHX.vol2[1].heatPort.Q_flow
dynamicHX.vol2[2].energyDynamics
dynamicHX.vol2[2].massDynamics
dynamicHX.vol2[2].substanceDynamics
dynamicHX.vol2[2].traceDynamics
dynamicHX.vol2[2].p_start
dynamicHX.vol2[2].T_start
dynamicHX.vol2[2].X_start[1]
dynamicHX.vol2[2].X_start[2]
dynamicHX.vol2[2].mSenFac
dynamicHX.vol2[2].initialize_p
dynamicHX.vol2[2].prescribedHeatFlowRate
dynamicHX.vol2[2].simplify_mWat_flow
dynamicHX.vol2[2].m_flow_nominal
dynamicHX.vol2[2].nPorts
dynamicHX.vol2[2].m_flow_small
dynamicHX.vol2[2].allowFlowReversal
dynamicHX.vol2[2].V
dynamicHX.vol2[2].T
dynamicHX.vol2[2].rho_start
dynamicHX.vol2[2].state_default.p
dynamicHX.vol2[2].state_default.T
dynamicHX.vol2[2].state_default.X[1]
dynamicHX.vol2[2].state_default.X[2]
dynamicHX.vol2[2].rho_default
dynamicHX.vol2[2].state_start.p
dynamicHX.vol2[2].state_start.T
dynamicHX.vol2[2].state_start.X[1]
dynamicHX.vol2[2].state_start.X[2]
dynamicHX.vol2[2].useSteadyStateTwoPort
dynamicHX.vol2[2].use_C_flow
dynamicHX.vol2[2].heatPort.Q_flow
dynamicHX.preDro1.allowFlowReversal
dynamicHX.preDro1.m_flow_nominal
dynamicHX.preDro1.m_flow_small
dynamicHX.preDro1.show_T
dynamicHX.preDro1.dp
dynamicHX.preDro1._m_flow_start
dynamicHX.preDro1._dp_start
dynamicHX.preDro1.from_dp
dynamicHX.preDro1.dp_nominal
dynamicHX.preDro1.homotopyInitialization
dynamicHX.preDro1.linearized
dynamicHX.preDro1.m_flow_turbulent
dynamicHX.preDro1.sta_default.p
dynamicHX.preDro1.sta_default.T
dynamicHX.preDro1.eta_default
dynamicHX.preDro1.m_flow_nominal_pos
dynamicHX.preDro1.dp_nominal_pos
dynamicHX.preDro1.deltaM
dynamicHX.preDro1.k
dynamicHX.preDro1.computeFlowResistance
dynamicHX.preDro1.coeff
dynamicHX.preDro2.allowFlowReversal
dynamicHX.preDro2.m_flow_nominal
dynamicHX.preDro2.m_flow_small
dynamicHX.preDro2.show_T
dynamicHX.preDro2.dp
dynamicHX.preDro2._m_flow_start
dynamicHX.preDro2._dp_start
dynamicHX.preDro2.from_dp
dynamicHX.preDro2.dp_nominal
dynamicHX.preDro2.homotopyInitialization
dynamicHX.preDro2.linearized
dynamicHX.preDro2.m_flow_turbulent
dynamicHX.preDro2.sta_default.p
dynamicHX.preDro2.sta_default.T
dynamicHX.preDro2.sta_default.X[1]
dynamicHX.preDro2.sta_default.X[2]
dynamicHX.preDro2.eta_default
dynamicHX.preDro2.m_flow_nominal_pos
dynamicHX.preDro2.dp_nominal_pos
dynamicHX.preDro2.deltaM
dynamicHX.preDro2.k
dynamicHX.preDro2.computeFlowResistance
dynamicHX.preDro2.coeff
dynamicHX.sta1_nominal.p
dynamicHX.sta1_nominal.T
dynamicHX.rho1_nominal
dynamicHX.sta2_nominal.p
dynamicHX.sta2_nominal.T
dynamicHX.sta2_nominal.X[1]
dynamicHX.sta2_nominal.X[2]
dynamicHX.rho2_nominal
dynamicHX.sta1_start.p
dynamicHX.sta1_start.T
dynamicHX.h1_outflow_start
dynamicHX.sta2_start.p
dynamicHX.sta2_start.T
dynamicHX.sta2_start.X[1]
dynamicHX.sta2_start.X[2]
dynamicHX.h2_outflow_start
dynamicHX.tau_C
dynamicHX.dT_nom
dynamicHX.heatCapacitor[1].C
dynamicHX.heatCapacitor[1].T
dynamicHX.heatCapacitor[1].der(T)
dynamicHX.heatCapacitor[1].port.Q_flow
dynamicHX.heatCapacitor[2].C
dynamicHX.heatCapacitor[2].T
dynamicHX.heatCapacitor[2].der(T)
dynamicHX.heatCapacitor[2].port.Q_flow
dynamicHX.Q_nom
dynamicHX.TCapacity_start
dynamicHX.Gc1
dynamicHX.Gc2
dynamicHX.convection1[1].dT
dynamicHX.convection1[2].dT
dynamicHX.convection2[1].dT
dynamicHX.convection2[2].dT
dynamicHX.switch1[1].u2
dynamicHX.switch1[1].u3
dynamicHX.switch1[2].u2
dynamicHX.switch1[2].u3
dynamicHX.realExpression[1].y
dynamicHX.realExpression[2].y
dynamicHX.u
THeaOut1.allowFlowReversal
THeaOut1.m_flow_nominal
THeaOut1.m_flow_small
THeaOut1.tau
THeaOut1.initType
THeaOut1.k
THeaOut1.dynamic
THeaOut1.mNor_flow
THeaOut1.tauInv
THeaOut1.T
THeaOut1.der(T)
THeaOut1.T_start
THeaOut1.transferHeat
THeaOut1.TAmb
THeaOut1.tauHeaTra
THeaOut1.tauHeaTraInv
THeaOut1.ratTau
THeaOut1.TMed
THeaOut1.T_a_inflow
THeaOut1.T_b_inflow
THeaOut2.allowFlowReversal
THeaOut2.m_flow_nominal
THeaOut2.m_flow_small
THeaOut2.tau
THeaOut2.initType
THeaOut2.k
THeaOut2.dynamic
THeaOut2.mNor_flow
THeaOut2.tauInv
THeaOut2.T
THeaOut2.der(T)
THeaOut2.T_start
THeaOut2.transferHeat
THeaOut2.TAmb
THeaOut2.tauHeaTra
THeaOut2.tauHeaTraInv
THeaOut2.ratTau
THeaOut2.TMed
THeaOut2.T_a_inflow
THeaOut2.T_b_inflow
booleanExpression.y
dynamicHX.vol1[1].dynBal.energyDynamics
dynamicHX.vol1[1].dynBal.massDynamics
dynamicHX.vol1[1].dynBal.substanceDynamics
dynamicHX.vol1[1].dynBal.traceDynamics
dynamicHX.vol1[1].dynBal.p_start
dynamicHX.vol1[1].dynBal.T_start
dynamicHX.vol1[1].dynBal.X_start[1]
dynamicHX.vol1[1].dynBal.mSenFac
dynamicHX.vol1[1].dynBal.initialize_p
dynamicHX.vol1[1].dynBal.simplify_mWat_flow
dynamicHX.vol1[1].dynBal.nPorts
dynamicHX.vol1[1].dynBal.use_mWat_flow
dynamicHX.vol1[1].dynBal.use_C_flow
dynamicHX.vol1[1].dynBal.mOut
dynamicHX.vol1[1].dynBal.medium.T
dynamicHX.vol1[1].dynBal.medium.d
dynamicHX.vol1[1].dynBal.medium.X[1]
dynamicHX.vol1[1].dynBal.medium.R
dynamicHX.vol1[1].dynBal.medium.MM
dynamicHX.vol1[1].dynBal.medium.preferredMediumStates
dynamicHX.vol1[1].dynBal.medium.standardOrderComponents
dynamicHX.vol1[1].dynBal.medium.T_degC
dynamicHX.vol1[1].dynBal.medium.p_bar
dynamicHX.vol1[1].dynBal.U
dynamicHX.vol1[1].dynBal.der(U)
dynamicHX.vol1[1].dynBal.m
dynamicHX.vol1[1].dynBal.der(m)
dynamicHX.vol1[1].dynBal.mb_flow
dynamicHX.vol1[1].dynBal.Hb_flow
dynamicHX.vol1[1].dynBal.fluidVolume
dynamicHX.vol1[1].dynBal.CSen
dynamicHX.vol1[1].dynBal.ports_H_flow[1]
dynamicHX.vol1[1].dynBal.ports_H_flow[2]
dynamicHX.vol1[1].dynBal.cp_default
dynamicHX.vol1[1].dynBal.rho_start
dynamicHX.vol1[1].dynBal.computeCSen
dynamicHX.vol1[1].dynBal.state_default.p
dynamicHX.vol1[1].dynBal.state_default.T
dynamicHX.vol1[1].dynBal.rho_default
dynamicHX.vol1[1].dynBal.hStart
dynamicHX.vol1[1].dynBal._simplify_mWat_flow
dynamicHX.vol1[1].dynBal.mWat_flow_internal
dynamicHX.vol1[2].dynBal.energyDynamics
dynamicHX.vol1[2].dynBal.massDynamics
dynamicHX.vol1[2].dynBal.substanceDynamics
dynamicHX.vol1[2].dynBal.traceDynamics
dynamicHX.vol1[2].dynBal.p_start
dynamicHX.vol1[2].dynBal.T_start
dynamicHX.vol1[2].dynBal.X_start[1]
dynamicHX.vol1[2].dynBal.mSenFac
dynamicHX.vol1[2].dynBal.initialize_p
dynamicHX.vol1[2].dynBal.simplify_mWat_flow
dynamicHX.vol1[2].dynBal.nPorts
dynamicHX.vol1[2].dynBal.use_mWat_flow
dynamicHX.vol1[2].dynBal.use_C_flow
dynamicHX.vol1[2].dynBal.mOut
dynamicHX.vol1[2].dynBal.medium.T
dynamicHX.vol1[2].dynBal.medium.d
dynamicHX.vol1[2].dynBal.medium.X[1]
dynamicHX.vol1[2].dynBal.medium.R
dynamicHX.vol1[2].dynBal.medium.MM
dynamicHX.vol1[2].dynBal.medium.preferredMediumStates
dynamicHX.vol1[2].dynBal.medium.standardOrderComponents
dynamicHX.vol1[2].dynBal.medium.T_degC
dynamicHX.vol1[2].dynBal.medium.p_bar
dynamicHX.vol1[2].dynBal.U
dynamicHX.vol1[2].dynBal.der(U)
dynamicHX.vol1[2].dynBal.m
dynamicHX.vol1[2].dynBal.der(m)
dynamicHX.vol1[2].dynBal.mb_flow
dynamicHX.vol1[2].dynBal.Hb_flow
dynamicHX.vol1[2].dynBal.fluidVolume
dynamicHX.vol1[2].dynBal.CSen
dynamicHX.vol1[2].dynBal.ports_H_flow[1]
dynamicHX.vol1[2].dynBal.ports_H_flow[2]
dynamicHX.vol1[2].dynBal.cp_default
dynamicHX.vol1[2].dynBal.rho_start
dynamicHX.vol1[2].dynBal.computeCSen
dynamicHX.vol1[2].dynBal.state_default.p
dynamicHX.vol1[2].dynBal.state_default.T
dynamicHX.vol1[2].dynBal.rho_default
dynamicHX.vol1[2].dynBal.hStart
dynamicHX.vol1[2].dynBal._simplify_mWat_flow
dynamicHX.vol1[2].dynBal.mWat_flow_internal
dynamicHX.vol2[1].dynBal.energyDynamics
dynamicHX.vol2[1].dynBal.massDynamics
dynamicHX.vol2[1].dynBal.substanceDynamics
dynamicHX.vol2[1].dynBal.traceDynamics
dynamicHX.vol2[1].dynBal.p_start
dynamicHX.vol2[1].dynBal.T_start
dynamicHX.vol2[1].dynBal.X_start[1]
dynamicHX.vol2[1].dynBal.X_start[2]
dynamicHX.vol2[1].dynBal.mSenFac
dynamicHX.vol2[1].dynBal.initialize_p
dynamicHX.vol2[1].dynBal.simplify_mWat_flow
dynamicHX.vol2[1].dynBal.nPorts
dynamicHX.vol2[1].dynBal.use_mWat_flow
dynamicHX.vol2[1].dynBal.use_C_flow
dynamicHX.vol2[1].dynBal.medium.d
dynamicHX.vol2[1].dynBal.medium.T
dynamicHX.vol2[1].dynBal.medium.X[2]
dynamicHX.vol2[1].dynBal.medium.u
dynamicHX.vol2[1].dynBal.medium.R
dynamicHX.vol2[1].dynBal.medium.MM
dynamicHX.vol2[1].dynBal.medium.preferredMediumStates
dynamicHX.vol2[1].dynBal.medium.standardOrderComponents
dynamicHX.vol2[1].dynBal.medium.T_degC
dynamicHX.vol2[1].dynBal.medium.p_bar
dynamicHX.vol2[1].dynBal.medium.MMX[1]
dynamicHX.vol2[1].dynBal.medium.MMX[2]
dynamicHX.vol2[1].dynBal.medium.X_air
dynamicHX.vol2[1].dynBal.medium.dT
dynamicHX.vol2[1].dynBal.U
dynamicHX.vol2[1].dynBal.der(U)
dynamicHX.vol2[1].dynBal.m
dynamicHX.vol2[1].dynBal.der(m)
dynamicHX.vol2[1].dynBal.mXi[1]
dynamicHX.vol2[1].dynBal.der(mXi[1])
dynamicHX.vol2[1].dynBal.mb_flow
dynamicHX.vol2[1].dynBal.Hb_flow
dynamicHX.vol2[1].dynBal.fluidVolume
dynamicHX.vol2[1].dynBal.CSen
dynamicHX.vol2[1].dynBal.ports_H_flow[1]
dynamicHX.vol2[1].dynBal.ports_H_flow[2]
dynamicHX.vol2[1].dynBal.ports_mXi_flow[1, 1]
dynamicHX.vol2[1].dynBal.ports_mXi_flow[2, 1]
dynamicHX.vol2[1].dynBal.cp_default
dynamicHX.vol2[1].dynBal.rho_start
dynamicHX.vol2[1].dynBal.computeCSen
dynamicHX.vol2[1].dynBal.state_default.p
dynamicHX.vol2[1].dynBal.state_default.T
dynamicHX.vol2[1].dynBal.state_default.X[1]
dynamicHX.vol2[1].dynBal.state_default.X[2]
dynamicHX.vol2[1].dynBal.rho_default
dynamicHX.vol2[1].dynBal.s[1]
dynamicHX.vol2[1].dynBal.hStart
dynamicHX.vol2[1].dynBal._simplify_mWat_flow
dynamicHX.vol2[1].dynBal.mWat_flow_internal
dynamicHX.vol2[2].dynBal.energyDynamics
dynamicHX.vol2[2].dynBal.massDynamics
dynamicHX.vol2[2].dynBal.substanceDynamics
dynamicHX.vol2[2].dynBal.traceDynamics
dynamicHX.vol2[2].dynBal.p_start
dynamicHX.vol2[2].dynBal.T_start
dynamicHX.vol2[2].dynBal.X_start[1]
dynamicHX.vol2[2].dynBal.X_start[2]
dynamicHX.vol2[2].dynBal.mSenFac
dynamicHX.vol2[2].dynBal.initialize_p
dynamicHX.vol2[2].dynBal.simplify_mWat_flow
dynamicHX.vol2[2].dynBal.nPorts
dynamicHX.vol2[2].dynBal.use_mWat_flow
dynamicHX.vol2[2].dynBal.use_C_flow
dynamicHX.vol2[2].dynBal.medium.d
dynamicHX.vol2[2].dynBal.medium.T
dynamicHX.vol2[2].dynBal.medium.X[2]
dynamicHX.vol2[2].dynBal.medium.u
dynamicHX.vol2[2].dynBal.medium.R
dynamicHX.vol2[2].dynBal.medium.MM
dynamicHX.vol2[2].dynBal.medium.preferredMediumStates
dynamicHX.vol2[2].dynBal.medium.standardOrderComponents
dynamicHX.vol2[2].dynBal.medium.T_degC
dynamicHX.vol2[2].dynBal.medium.p_bar
dynamicHX.vol2[2].dynBal.medium.MMX[1]
dynamicHX.vol2[2].dynBal.medium.MMX[2]
dynamicHX.vol2[2].dynBal.medium.X_air
dynamicHX.vol2[2].dynBal.medium.dT
dynamicHX.vol2[2].dynBal.U
dynamicHX.vol2[2].dynBal.der(U)
dynamicHX.vol2[2].dynBal.m
dynamicHX.vol2[2].dynBal.der(m)
dynamicHX.vol2[2].dynBal.mXi[1]
dynamicHX.vol2[2].dynBal.der(mXi[1])
dynamicHX.vol2[2].dynBal.mb_flow
dynamicHX.vol2[2].dynBal.Hb_flow
dynamicHX.vol2[2].dynBal.fluidVolume
dynamicHX.vol2[2].dynBal.CSen
dynamicHX.vol2[2].dynBal.ports_H_flow[1]
dynamicHX.vol2[2].dynBal.ports_H_flow[2]
dynamicHX.vol2[2].dynBal.ports_mXi_flow[1, 1]
dynamicHX.vol2[2].dynBal.ports_mXi_flow[2, 1]
dynamicHX.vol2[2].dynBal.cp_default
dynamicHX.vol2[2].dynBal.rho_start
dynamicHX.vol2[2].dynBal.computeCSen
dynamicHX.vol2[2].dynBal.state_default.p
dynamicHX.vol2[2].dynBal.state_default.T
dynamicHX.vol2[2].dynBal.state_default.X[1]
dynamicHX.vol2[2].dynBal.state_default.X[2]
dynamicHX.vol2[2].dynBal.rho_default
dynamicHX.vol2[2].dynBal.s[1]
dynamicHX.vol2[2].dynBal.hStart
dynamicHX.vol2[2].dynBal._simplify_mWat_flow
dynamicHX.vol2[2].dynBal.mWat_flow_internal

double initialValue(565,6)
 -2       1                       0                       0                
  6   258   # sin_2.nPorts
 -2       0                       0                       0                
  6   257   # sin_2.verifyInputs
 -2  4.4721359549995793E-01 -100000                  100000                
  6   388   # sin_2.ports[1].m_flow
 -2  1.2569554500000000E+04 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # sin_2.ports[1].h_outflow
 -2       3                       1                       3                
  6  1282   # sin_2.flowDirection
 -2  1.0000000000000000E-03       0                       0                
  6  1280   # sin_2.X_in_internal[1]
 -2  9.9900000000000000E-01       0                       0                
  6  1280   # sin_2.X_in_internal[2]
 -2       1                       0                       0                
  6   769   # sin_2.use_p_in
 -1  1.0132500000000000E+05       0                  1.0000000000000000E+08
  1   280   # sin_2.p
 -2       0                       0                       0                
  6   769   # sin_2.use_T_in
 -1  2.8314999999999998E+02       1                   10000                
  1   280   # sin_2.T
 -2       0                       0                       0                
  6   769   # sin_2.use_X_in
 -2       0                       0                       0                
  6   769   # sin_2.use_Xi_in
 -2       0                       0                       0                
  6   769   # sin_2.use_C_in
 -1  1.0000000000000000E-03       0                       1                
  1   280   # sin_2.X[1]
 -1  9.9900000000000000E-01       0                       1                
  1   280   # sin_2.X[2]
 -1     200                       0                       0                
  1   280   # PIn.height
 -1      60                       0                 1.0000000000000000E+100
  1   280   # PIn.duration
 -1  1.0132500000000000E+05       0                       0                
  1   280   # PIn.offset
 -1      50                       0                       0                
  1   280   # PIn.startTime
 -2  1.0152500000000000E+05       0                  1.0000000000000000E+08
  6   256   # PIn.y
 -2       1                       0                       0                
  6   258   # sou_2.nPorts
 -2       0                       0                       0                
  6   257   # sou_2.verifyInputs
 -2  4.5300945000000000E+04 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # sou_2.ports[1].h_outflow
 -2       3                       1                       3                
  6  1282   # sou_2.flowDirection
 -2  1.0000000000000000E-02       0                       0                
  6  1280   # sou_2.X_in_internal[1]
 -2  9.8999999999999999E-01       0                       0                
  6  1280   # sou_2.X_in_internal[2]
 -2       1                       0                       0                
  6   769   # sou_2.use_p_in
 -1  1.0132500000000000E+05       0                  1.0000000000000000E+08
  1   280   # sou_2.p
 -2       1                       0                       0                
  6   769   # sou_2.use_T_in
 -1  2.7814999999999998E+02       1                   10000                
  1   280   # sou_2.T
 -2       0                       0                       0                
  6   769   # sou_2.use_X_in
 -2       0                       0                       0                
  6   769   # sou_2.use_Xi_in
 -2       0                       0                       0                
  6   769   # sou_2.use_C_in
 -1  1.0000000000000000E-02       0                       1                
  1   280   # sou_2.X[1]
 -1  9.8999999999999999E-01       0                       1                
  1   280   # sou_2.X[2]
 -1      10                       0                       0                
  1   280   # TWat.height
 -1      60                       0                 1.0000000000000000E+100
  1   280   # TWat.duration
 -1  3.0314999999999998E+02       0                       0                
  1   280   # TWat.offset
 -1      60                       0                       0                
  1   280   # TWat.startTime
 -2  3.1314999999999998E+02       0                       0                
  6   256   # TWat.y
 -1  2.9314999999999998E+02       0                       0                
  1   280   # TDb.k
 -1  1.0132500000000000E+05       0                  1.0000000000000000E+08
  1   280   # POut.k
 -2       1                       0                       0                
  6   258   # sin_1.nPorts
 -2       0                       0                       0                
  6   257   # sin_1.verifyInputs
 -2       1                 -100000                  100000                
  6   388   # sin_1.ports[1].m_flow
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6   260   # sin_1.ports[1].p
 -2  1.0460000000000000E+05 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # sin_1.ports[1].h_outflow
 -2       3                       1                       3                
  6  1282   # sin_1.flowDirection
 -2       1                       0                       0                
  6  1280   # sin_1.X_in_internal[1]
 -2       1                       0                       0                
  6   769   # sin_1.use_p_in
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1   280   # sin_1.p
 -2       0                       0                       0                
  6   769   # sin_1.use_T_in
 -1  2.9814999999999998E+02       1                   10000                
  1   280   # sin_1.T
 -2       0                       0                       0                
  6   769   # sin_1.use_X_in
 -2       0                       0                       0                
  6   769   # sin_1.use_Xi_in
 -2       0                       0                       0                
  6   769   # sin_1.use_C_in
 -1       1                       0                       1                
  1   280   # sin_1.X[1]
 -2       1                       0                       0                
  6   258   # sou_1.nPorts
 -2       0                       0                       0                
  6   257   # sou_1.verifyInputs
 -2  1.6736000000000000E+05 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # sou_1.ports[1].h_outflow
 -2       3                       1                       3                
  6  1282   # sou_1.flowDirection
 -2       1                       0                       0                
  6  1280   # sou_1.X_in_internal[1]
 -2       0                       0                       0                
  6   769   # sou_1.use_p_in
 -1  3.0500000000000000E+05       0                  1.0000000000000000E+08
  1   280   # sou_1.p
 -2       1                       0                       0                
  6   769   # sou_1.use_T_in
 -1  3.2314999999999998E+02       1                   10000                
  1   280   # sou_1.T
 -2       0                       0                       0                
  6   769   # sou_1.use_X_in
 -2       0                       0                       0                
  6   769   # sou_1.use_Xi_in
 -2       0                       0                       0                
  6   769   # sou_1.use_C_in
 -1       1                       0                       1                
  1   280   # sou_1.X[1]
 -1    5000                       0                       0                
  1   280   # trapezoid.amplitude
 -1      10                       0                 1.0000000000000000E+100
  1   280   # trapezoid.rising
 -1     100                       0                 1.0000000000000000E+100
  1   280   # trapezoid.width
 -1      10                       0                 1.0000000000000000E+100
  1   280   # trapezoid.falling
 -1    3600                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # trapezoid.period
 -1      -1                       0                       0                
  1   282   # trapezoid.nperiod
 -1  3.0000000000000000E+05       0                       0                
  1   280   # trapezoid.offset
 -1       0                       0                       0                
  1   280   # trapezoid.startTime
 -2      10                       0                       0                
  6  1280   # trapezoid.T_rising
 -2     110                       0                       0                
  6  1280   # trapezoid.T_width
 -2     120                       0                       0                
  6  1280   # trapezoid.T_falling
 -2       0                       0                       0                
  6  1344   # trapezoid.T_start
 -2       0                       0                       0                
  6  1346   # trapezoid.count
 -2       1                       0                       0                
  6   257   # dynamicHX.allowFlowReversal1
 -2       1                       0                       0                
  6   257   # dynamicHX.allowFlowReversal2
 -2  1.6078447499109808E+05 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # dynamicHX.port_a1.h_outflow
 -2  1.5946137253930682E+05 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # dynamicHX.port_b1.h_outflow
 -2  5.9996084647499629E+04 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # dynamicHX.port_a2.h_outflow
 -2  1.0000000000000000E-02       0                       1                
  6   260   # dynamicHX.port_a2.Xi_outflow[1]
 -2  6.2883857235715754E+04 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # dynamicHX.port_b2.h_outflow
 -2  1.0000000000000000E-02       0                       1                
  6   260   # dynamicHX.port_b2.Xi_outflow[1]
 -2       1                       0                 1.0000000000000000E+100
  6   256   # dynamicHX.m1_flow_nominal
 -2       1                       0                 1.0000000000000000E+100
  6   256   # dynamicHX.m2_flow_nominal
 -2  1.0000000000000000E-04       0                  100000                
  6   256   # dynamicHX.m1_flow_small
 -2  1.0000000000000000E-04       0                  100000                
  6   256   # dynamicHX.m2_flow_small
 -2       0                       0                       0                
  6   257   # dynamicHX.show_T
 -2    5000                       0                       0                
  6   256   # dynamicHX.dp1
 -2     200                       0                       0                
  6   256   # dynamicHX.dp2
 -2  3.1314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.state_a1_inflow.T
 -2  2.9814999999999998E+02       1                   10000                
  6  1280   # dynamicHX.state_b1_inflow.T
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.state_a2_inflow.T
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.state_a2_inflow.X[2]
 -2  2.8314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.state_b2_inflow.T
 -2  9.9900000000000000E-01       0                       1                
  6  1280   # dynamicHX.state_b2_inflow.X[2]
 -2       1                       0                       0                
  6   257   # dynamicHX.computeFlowResistance1
 -2       0                       0                       0                
  6   257   # dynamicHX.from_dp1
 -2    5000                       0                 1.0000000000000000E+100
  6   256   # dynamicHX.dp1_nominal
 -2       0                       0                       0                
  6   257   # dynamicHX.linearizeFlowResistance1
 -2  1.0000000000000001E-01       0                       0                
  6   256   # dynamicHX.deltaM1
 -2       1                       0                       0                
  6   257   # dynamicHX.computeFlowResistance2
 -2       0                       0                       0                
  6   257   # dynamicHX.from_dp2
 -2    1000                       0                 1.0000000000000000E+100
  6   256   # dynamicHX.dp2_nominal
 -2       0                       0                       0                
  6   257   # dynamicHX.linearizeFlowResistance2
 -2  1.0000000000000001E-01       0                       0                
  6   256   # dynamicHX.deltaM2
 -2       2                       1                 1.0000000000000000E+100
  6   258   # dynamicHX.nNodes
 -2      30                       0                       0                
  6   256   # dynamicHX.tau1
 -2      30                       0                       0                
  6   256   # dynamicHX.tau2
 -2       1                       0                       0                
  6   257   # dynamicHX.homotopyInitialization
 -2       1                       1                       4                
  6   258   # dynamicHX.energyDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.massDynamics
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1   280   # dynamicHX.p1_start
 -1  2.9314999999999998E+02       1                   10000                
  1   280   # dynamicHX.T1_start
 -1       1                       0                       1                
  1   280   # dynamicHX.X1_start[1]
 -1  1.0132500000000000E+05       0                  1.0000000000000000E+08
  1   280   # dynamicHX.p2_start
 -1  2.9314999999999998E+02       1                   10000                
  1   280   # dynamicHX.T2_start
 -1  1.0000000000000000E-02       0                       1                
  1   280   # dynamicHX.X2_start[1]
 -1  9.8999999999999999E-01       0                       1                
  1   280   # dynamicHX.X2_start[2]
 -2 -7.8804807952493175E+03       0                       0                
  6   256   # dynamicHX.Q1_flow
 -2  7.8699837678205622E+03       0                       0                
  6   256   # dynamicHX.Q2_flow
 -2       1                       1                       4                
  6   258   # dynamicHX.vol1[1].energyDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol1[1].massDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol1[1].substanceDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol1[1].traceDynamics
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6   256   # dynamicHX.vol1[1].p_start
 -2  2.9314999999999998E+02       1                   10000                
  6   256   # dynamicHX.vol1[1].T_start
 -2       1                       0                       1                
  6   256   # dynamicHX.vol1[1].X_start[1]
 -2       1                       1                 1.0000000000000000E+100
  6   256   # dynamicHX.vol1[1].mSenFac
 -2       0                       0                       0                
  6   769   # dynamicHX.vol1[1].initialize_p
 -2       0                       0                       0                
  6   257   # dynamicHX.vol1[1].prescribedHeatFlowRate
 -2       1                       0                       0                
  6   257   # dynamicHX.vol1[1].simplify_mWat_flow
 -2       1                       0                 1.0000000000000000E+100
  6   256   # dynamicHX.vol1[1].m_flow_nominal
 -2       2                       0                       0                
  6   258   # dynamicHX.vol1[1].nPorts
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # dynamicHX.vol1[1].m_flow_small
 -2       1                       0                       0                
  6   257   # dynamicHX.vol1[1].allowFlowReversal
 -2  1.5066503546654935E-02       0                       0                
  6   256   # dynamicHX.vol1[1].V
 -2  3.1157841180475572E+02       1                   10000                
  6   256   # dynamicHX.vol1[1].T
 -2      15                       0                       0                
  6   256   # dynamicHX.vol1[1].m
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].rho_start
 -2       1                       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[1].state_default.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol1[1].state_default.T
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].rho_default
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[1].state_start.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol1[1].state_start.T
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[1].useSteadyStateTwoPort
 -2 -6.5736843639695053E+03       0                       0                
  6   388   # dynamicHX.vol1[1].heatPort.Q_flow
 -2       1                       1                       4                
  6   258   # dynamicHX.vol1[2].energyDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol1[2].massDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol1[2].substanceDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol1[2].traceDynamics
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6   256   # dynamicHX.vol1[2].p_start
 -2  2.9314999999999998E+02       1                   10000                
  6   256   # dynamicHX.vol1[2].T_start
 -2       1                       0                       1                
  6   256   # dynamicHX.vol1[2].X_start[1]
 -2       1                       1                 1.0000000000000000E+100
  6   256   # dynamicHX.vol1[2].mSenFac
 -2       0                       0                       0                
  6   769   # dynamicHX.vol1[2].initialize_p
 -2       0                       0                       0                
  6   257   # dynamicHX.vol1[2].prescribedHeatFlowRate
 -2       1                       0                       0                
  6   257   # dynamicHX.vol1[2].simplify_mWat_flow
 -2       1                       0                 1.0000000000000000E+100
  6   256   # dynamicHX.vol1[2].m_flow_nominal
 -2       2                       0                       0                
  6   258   # dynamicHX.vol1[2].nPorts
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # dynamicHX.vol1[2].m_flow_small
 -2       1                       0                       0                
  6   257   # dynamicHX.vol1[2].allowFlowReversal
 -2  1.5066503546654935E-02       0                       0                
  6   256   # dynamicHX.vol1[2].V
 -2  3.1126218272927980E+02       1                   10000                
  6   256   # dynamicHX.vol1[2].T
 -2      15                       0                       0                
  6   256   # dynamicHX.vol1[2].m
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].rho_start
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[2].state_default.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol1[2].state_default.T
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].rho_default
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[2].state_start.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol1[2].state_start.T
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[2].useSteadyStateTwoPort
 -2 -1.3067964312798117E+03       0                       0                
  6   388   # dynamicHX.vol1[2].heatPort.Q_flow
 -2       1                       1                       4                
  6   258   # dynamicHX.vol2[1].energyDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol2[1].massDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol2[1].substanceDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol2[1].traceDynamics
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6   256   # dynamicHX.vol2[1].p_start
 -2  2.9314999999999998E+02       1                   10000                
  6   256   # dynamicHX.vol2[1].T_start
 -2  1.0000000000000000E-02       0                       1                
  6   256   # dynamicHX.vol2[1].X_start[1]
 -2  9.8999999999999999E-01       0                       1                
  6   256   # dynamicHX.vol2[1].X_start[2]
 -2       1                       1                 1.0000000000000000E+100
  6   256   # dynamicHX.vol2[1].mSenFac
 -2       1                       0                       0                
  6   769   # dynamicHX.vol2[1].initialize_p
 -2       0                       0                       0                
  6   257   # dynamicHX.vol2[1].prescribedHeatFlowRate
 -2       1                       0                       0                
  6   257   # dynamicHX.vol2[1].simplify_mWat_flow
 -2       1                       0                 1.0000000000000000E+100
  6   256   # dynamicHX.vol2[1].m_flow_nominal
 -2       2                       0                       0                
  6   258   # dynamicHX.vol2[1].nPorts
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # dynamicHX.vol2[1].m_flow_small
 -2       1                       0                       0                
  6   257   # dynamicHX.vol2[1].allowFlowReversal
 -2  1.2500000000000000E+01       0                       0                
  6   256   # dynamicHX.vol2[1].V
 -2  3.0763453451564214E+02       1                   10000                
  6   256   # dynamicHX.vol2[1].T
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[1].rho_start
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[1].state_default.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol2[1].state_default.T
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.vol2[1].state_default.X[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[1].state_default.X[2]
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[1].rho_default
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[1].state_start.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol2[1].state_start.T
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.vol2[1].state_start.X[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[1].state_start.X[2]
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[1].useSteadyStateTwoPort
 -2       0                       0                       0                
  6   257   # dynamicHX.vol2[1].use_C_flow
 -2  6.5725732664090710E+03       0                       0                
  6   388   # dynamicHX.vol2[1].heatPort.Q_flow
 -2       1                       1                       4                
  6   258   # dynamicHX.vol2[2].energyDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol2[2].massDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol2[2].substanceDynamics
 -2       1                       1                       4                
  6   258   # dynamicHX.vol2[2].traceDynamics
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6   256   # dynamicHX.vol2[2].p_start
 -2  2.9314999999999998E+02       1                   10000                
  6   256   # dynamicHX.vol2[2].T_start
 -2  1.0000000000000000E-02       0                       1                
  6   256   # dynamicHX.vol2[2].X_start[1]
 -2  9.8999999999999999E-01       0                       1                
  6   256   # dynamicHX.vol2[2].X_start[2]
 -2       1                       1                 1.0000000000000000E+100
  6   256   # dynamicHX.vol2[2].mSenFac
 -2       1                       0                       0                
  6   769   # dynamicHX.vol2[2].initialize_p
 -2       0                       0                       0                
  6   257   # dynamicHX.vol2[2].prescribedHeatFlowRate
 -2       1                       0                       0                
  6   257   # dynamicHX.vol2[2].simplify_mWat_flow
 -2       1                       0                 1.0000000000000000E+100
  6   256   # dynamicHX.vol2[2].m_flow_nominal
 -2       2                       0                       0                
  6   258   # dynamicHX.vol2[2].nPorts
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # dynamicHX.vol2[2].m_flow_small
 -2       1                       0                       0                
  6   257   # dynamicHX.vol2[2].allowFlowReversal
 -2  1.2500000000000000E+01       0                       0                
  6   256   # dynamicHX.vol2[2].V
 -2  3.1048092064947241E+02       1                   10000                
  6   256   # dynamicHX.vol2[2].T
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[2].rho_start
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[2].state_default.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol2[2].state_default.T
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.vol2[2].state_default.X[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[2].state_default.X[2]
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[2].rho_default
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[2].state_start.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol2[2].state_start.T
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.vol2[2].state_start.X[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[2].state_start.X[2]
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[2].useSteadyStateTwoPort
 -2       0                       0                       0                
  6   257   # dynamicHX.vol2[2].use_C_flow
 -2  1.2974105014114912E+03       0                       0                
  6   388   # dynamicHX.vol2[2].heatPort.Q_flow
 -2       1                       0                       0                
  6   257   # dynamicHX.preDro1.allowFlowReversal
 -2       1                       0                       0                
  6   256   # dynamicHX.preDro1.m_flow_nominal
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # dynamicHX.preDro1.m_flow_small
 -2       0                       0                       0                
  6   257   # dynamicHX.preDro1.show_T
 -2    5000                       0                       0                
  6   256   # dynamicHX.preDro1.dp
 -2       0                       0                       0                
  6  1280   # dynamicHX.preDro1._m_flow_start
 -2       0                       0                       0                
  6  1280   # dynamicHX.preDro1._dp_start
 -2       0                       0                       0                
  6   257   # dynamicHX.preDro1.from_dp
 -2    5000                       0                       0                
  6   256   # dynamicHX.preDro1.dp_nominal
 -2       1                       0                       0                
  6   257   # dynamicHX.preDro1.homotopyInitialization
 -2       0                       0                       0                
  6   257   # dynamicHX.preDro1.linearized
 -2  1.0000000000000001E-01       0                 1.0000000000000000E+100
  6   256   # dynamicHX.preDro1.m_flow_turbulent
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1  1304   # dynamicHX.preDro1.sta_default.p
 -1  2.9314999999999998E+02       1                   10000                
  1  1304   # dynamicHX.preDro1.sta_default.T
 -2  1.0000000000000000E-03       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.preDro1.eta_default
 -2       1                       0                       0                
  6  1280   # dynamicHX.preDro1.m_flow_nominal_pos
 -2    5000                       0                       0                
  6  1280   # dynamicHX.preDro1.dp_nominal_pos
 -2  1.0000000000000001E-01  9.9999999999999995E-07 1.0000000000000000E+100
  6   256   # dynamicHX.preDro1.deltaM
 -2  1.4142135623730951E-02       0                       0                
  6   256   # dynamicHX.preDro1.k
 -2       1                       0                       0                
  6  1281   # dynamicHX.preDro1.computeFlowResistance
 -2       0                       0                       0                
  6  1280   # dynamicHX.preDro1.coeff
 -2       1                       0                       0                
  6   257   # dynamicHX.preDro2.allowFlowReversal
 -2       1                       0                       0                
  6   256   # dynamicHX.preDro2.m_flow_nominal
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # dynamicHX.preDro2.m_flow_small
 -2       0                       0                       0                
  6   257   # dynamicHX.preDro2.show_T
 -2     200                       0                       0                
  6   256   # dynamicHX.preDro2.dp
 -2       0                       0                       0                
  6  1280   # dynamicHX.preDro2._m_flow_start
 -2       0                       0                       0                
  6  1280   # dynamicHX.preDro2._dp_start
 -2       0                       0                       0                
  6   257   # dynamicHX.preDro2.from_dp
 -2    1000                       0                       0                
  6   256   # dynamicHX.preDro2.dp_nominal
 -2       1                       0                       0                
  6   257   # dynamicHX.preDro2.homotopyInitialization
 -2       0                       0                       0                
  6   257   # dynamicHX.preDro2.linearized
 -2  1.0000000000000001E-01       0                 1.0000000000000000E+100
  6   256   # dynamicHX.preDro2.m_flow_turbulent
 -1  1.0132500000000000E+05       0                  1.0000000000000000E+08
  1  1304   # dynamicHX.preDro2.sta_default.p
 -1  2.9314999999999998E+02       1                   10000                
  1  1304   # dynamicHX.preDro2.sta_default.T
 -1  1.0000000000000000E-02       0                       1                
  1  1304   # dynamicHX.preDro2.sta_default.X[1]
 -1  9.8999999999999999E-01       0                       1                
  1  1304   # dynamicHX.preDro2.sta_default.X[2]
 -2  1.8232865473649424E-05       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.preDro2.eta_default
 -2       1                       0                       0                
  6  1280   # dynamicHX.preDro2.m_flow_nominal_pos
 -2    1000                       0                       0                
  6  1280   # dynamicHX.preDro2.dp_nominal_pos
 -2  1.0000000000000001E-01  9.9999999999999995E-07 1.0000000000000000E+100
  6   256   # dynamicHX.preDro2.deltaM
 -2  3.1622776601683791E-02       0                       0                
  6   256   # dynamicHX.preDro2.k
 -2       1                       0                       0                
  6  1281   # dynamicHX.preDro2.computeFlowResistance
 -2       0                       0                       0                
  6  1280   # dynamicHX.preDro2.coeff
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1  1304   # dynamicHX.sta1_nominal.p
 -1  2.9314999999999998E+02       1                   10000                
  1  1304   # dynamicHX.sta1_nominal.T
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.rho1_nominal
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.sta2_nominal.p
 -1  2.9314999999999998E+02       1                   10000                
  1  1304   # dynamicHX.sta2_nominal.T
 -1  1.0000000000000000E-02       0                       1                
  1  1304   # dynamicHX.sta2_nominal.X[1]
 -1  9.8999999999999999E-01       0                       1                
  1  1304   # dynamicHX.sta2_nominal.X[2]
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.rho2_nominal
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.sta1_start.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.sta1_start.T
 -2   83680                       0                       0                
  6  1280   # dynamicHX.h1_outflow_start
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.sta2_start.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.sta2_start.T
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.sta2_start.X[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.sta2_start.X[2]
 -2  4.5300945000000000E+04       0                       0                
  6  1280   # dynamicHX.h2_outflow_start
 -1      30                       0                       0                
  1   280   # dynamicHX.tau_C
 -1      30                       0                       0                
  1   280   # dynamicHX.dT_nom
 -2   25000                       0                       0                
  6   256   # dynamicHX.heatCapacitor[1].C
 -2  3.0960630649556487E+02       0                 1.0000000000000000E+100
  2   272   # dynamicHX.heatCapacitor[1].T
 -2  4.4443902417369829E-05       0                       0                
  3   256   # dynamicHX.heatCapacitor[1].der(T)
 -2  1.1110975604342457E+00       0                       0                
  6   388   # dynamicHX.heatCapacitor[1].port.Q_flow
 -2   25000                       0                       0                
  6   256   # dynamicHX.heatCapacitor[2].C
 -2  3.1087014379989586E+02       0                 1.0000000000000000E+100
  2   272   # dynamicHX.heatCapacitor[2].T
 -2  3.7543719473282183E-04       0                       0                
  3   256   # dynamicHX.heatCapacitor[2].der(T)
 -2  9.3859298683205452E+00       0                       0                
  6   388   # dynamicHX.heatCapacitor[2].port.Q_flow
 -1   50000                       0                       0                
  1   280   # dynamicHX.Q_nom
 -2  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # dynamicHX.TCapacity_start
 -2  3.3333333333333335E+03       0                       0                
  6   256   # dynamicHX.Gc1
 -2  3.3333333333333335E+03       0                       0                
  6   256   # dynamicHX.Gc2
 -2  1.9721053091908516E+00       0                       0                
  6   256   # dynamicHX.convection1[1].dT
 -2  3.9203892938394347E-01       0                       0                
  6   256   # dynamicHX.convection1[2].dT
 -2 -1.9717719799227211E+00       0                       0                
  6   256   # dynamicHX.convection2[1].dT
 -2 -3.8922315042344735E-01       0                       0                
  6   256   # dynamicHX.convection2[2].dT
 -2       1                       0                       0                
  6   257   # dynamicHX.switch1[1].u2
 -2       0                       0                       0                
  6   256   # dynamicHX.switch1[1].u3
 -2       1                       0                       0                
  6   257   # dynamicHX.switch1[2].u2
 -2       0                       0                       0                
  6   256   # dynamicHX.switch1[2].u3
 -2       0                       0                       0                
  6   256   # dynamicHX.realExpression[1].y
 -2       0                       0                       0                
  6   256   # dynamicHX.realExpression[2].y
 -2       1                       0                       0                
  6   257   # dynamicHX.u
 -2       1                       0                       0                
  6   257   # THeaOut1.allowFlowReversal
 -1       1                       0                 1.0000000000000000E+100
  1   280   # THeaOut1.m_flow_nominal
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # THeaOut1.m_flow_small
 -2       1                       0                 1.0000000000000000E+100
  6   256   # THeaOut1.tau
 -2       3                       1                       4                
  6   258   # THeaOut1.initType
 -2       1                       0                       0                
  6  1280   # THeaOut1.k
 -2       1                       0                       0                
  6  1281   # THeaOut1.dynamic
 -2       1                       0                       0                
  6  1280   # THeaOut1.mNor_flow
 -2       1                       0                       0                
  6  1280   # THeaOut1.tauInv
 -2  3.1126191335358266E+02       0                 1.0000000000000000E+100
  2   272   # THeaOut1.T
 -2  2.6937569714391429E-04       0                       0                
  3   256   # THeaOut1.der(T)
 -1  2.8914999999999998E+02       0                 1.0000000000000000E+100
  1   280   # THeaOut1.T_start
 -2       0                       0                       0                
  6   257   # THeaOut1.transferHeat
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # THeaOut1.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1   280   # THeaOut1.tauHeaTra
 -2  8.3333333333333339E-04       0                       0                
  6  1280   # THeaOut1.tauHeaTraInv
 -2    1200                       0                       0                
  6  1280   # THeaOut1.ratTau
 -2  3.1126218272927980E+02       1                   10000                
  6  1280   # THeaOut1.TMed
 -2  3.1126218272927980E+02       1                   10000                
  6  1280   # THeaOut1.T_a_inflow
 -2  2.9814999999999998E+02       1                   10000                
  6  1280   # THeaOut1.T_b_inflow
 -2       1                       0                       0                
  6   257   # THeaOut2.allowFlowReversal
 -1       1                       0                 1.0000000000000000E+100
  1   280   # THeaOut2.m_flow_nominal
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # THeaOut2.m_flow_small
 -2       1                       0                 1.0000000000000000E+100
  6   256   # THeaOut2.tau
 -2       3                       1                       4                
  6   258   # THeaOut2.initType
 -2  4.4721359549995793E-01       0                       0                
  6  1280   # THeaOut2.k
 -2       1                       0                       0                
  6  1281   # THeaOut2.dynamic
 -2  4.4721359549995793E-01       0                       0                
  6  1280   # THeaOut2.mNor_flow
 -2       1                       0                       0                
  6  1280   # THeaOut2.tauInv
 -2  3.1047997003459380E+02       0                 1.0000000000000000E+100
  2   272   # THeaOut2.T
 -2  4.2512789779646697E-04       0                       0                
  3   256   # THeaOut2.der(T)
 -1  2.8914999999999998E+02       0                 1.0000000000000000E+100
  1   280   # THeaOut2.T_start
 -2       0                       0                       0                
  6   257   # THeaOut2.transferHeat
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # THeaOut2.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1   280   # THeaOut2.tauHeaTra
 -2  8.3333333333333339E-04       0                       0                
  6  1280   # THeaOut2.tauHeaTraInv
 -2    1200                       0                       0                
  6  1280   # THeaOut2.ratTau
 -2  3.1048092064947241E+02       1                   10000                
  6  1280   # THeaOut2.TMed
 -2  3.1048092064947241E+02       1                   10000                
  6  1280   # THeaOut2.T_a_inflow
 -2  2.8314999999999998E+02       1                   10000                
  6  1280   # THeaOut2.T_b_inflow
 -2       1                       0                       0                
  6   257   # booleanExpression.y
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol1[1].dynBal.energyDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol1[1].dynBal.massDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol1[1].dynBal.substanceDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol1[1].dynBal.traceDynamics
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[1].dynBal.p_start
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol1[1].dynBal.T_start
 -2       1                       0                       1                
  6  1280   # dynamicHX.vol1[1].dynBal.X_start[1]
 -2       1                       1                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].dynBal.mSenFac
 -2       0                       0                       0                
  6   769   # dynamicHX.vol1[1].dynBal.initialize_p
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol1[1].dynBal.simplify_mWat_flow
 -2       2                       0                       0                
  6  1282   # dynamicHX.vol1[1].dynBal.nPorts
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[1].dynBal.use_mWat_flow
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[1].dynBal.use_C_flow
 -2      15                       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].dynBal.mOut
 -2  3.1157841180475572E+02       1                   10000                
  6  1280   # dynamicHX.vol1[1].dynBal.medium.T
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].dynBal.medium.d
 -2       1                       0                       1                
  6  1280   # dynamicHX.vol1[1].dynBal.medium.X[1]
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.medium.R
 -2  1.8015268000000001E-02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].dynBal.medium.MM
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[1].dynBal.medium.preferredMediumStates
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol1[1].dynBal.medium.standardOrderComponents
 -2  3.8428411804755740E+01       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.medium.T_degC
 -2  3.0000000000000004E+00       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.medium.p_bar
 -2  2.4117671248664712E+06       0                       0                
  2  1296   # dynamicHX.vol1[1].dynBal.U
 -2  1.8406449324193090E+00       0                       0                
  3  1280   # dynamicHX.vol1[1].dynBal.der(U)
 -2      15                       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].dynBal.m
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.der(m)
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.mb_flow
 -2  6.5755250089019246E+03       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.Hb_flow
 -2  1.5066503546654935E-02       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.fluidVolume
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.CSen
 -2  1.6736000000000000E+05 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[1].dynBal.ports_H_flow[1]
 -2 -1.6078447499109808E+05 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[1].dynBal.ports_H_flow[2]
 -2    4184                       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.cp_default
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].dynBal.rho_start
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[1].dynBal.computeCSen
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[1].dynBal.state_default.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol1[1].dynBal.state_default.T
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[1].dynBal.rho_default
 -2   83680                       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.hStart
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[1].dynBal._simplify_mWat_flow
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[1].dynBal.mWat_flow_internal
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol1[2].dynBal.energyDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol1[2].dynBal.massDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol1[2].dynBal.substanceDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol1[2].dynBal.traceDynamics
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[2].dynBal.p_start
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol1[2].dynBal.T_start
 -2       1                       0                       1                
  6  1280   # dynamicHX.vol1[2].dynBal.X_start[1]
 -2       1                       1                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].dynBal.mSenFac
 -2       0                       0                       0                
  6   769   # dynamicHX.vol1[2].dynBal.initialize_p
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol1[2].dynBal.simplify_mWat_flow
 -2       2                       0                       0                
  6  1282   # dynamicHX.vol1[2].dynBal.nPorts
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[2].dynBal.use_mWat_flow
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[2].dynBal.use_C_flow
 -2      15                       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].dynBal.mOut
 -2  3.1126218272927980E+02       1                   10000                
  6  1280   # dynamicHX.vol1[2].dynBal.medium.T
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].dynBal.medium.d
 -2       1                       0                       1                
  6  1280   # dynamicHX.vol1[2].dynBal.medium.X[1]
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.medium.R
 -2  1.8015268000000001E-02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].dynBal.medium.MM
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[2].dynBal.medium.preferredMediumStates
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol1[2].dynBal.medium.standardOrderComponents
 -2  3.8112182729279823E+01       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.medium.T_degC
 -2  3.0000000000000004E+00       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.medium.p_bar
 -2  2.3919205880896021E+06       0                       0                
  2  1296   # dynamicHX.vol1[2].dynBal.U
 -2  1.6306020511447514E+01       0                       0                
  3  1280   # dynamicHX.vol1[2].dynBal.der(U)
 -2      15                       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].dynBal.m
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.der(m)
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.mb_flow
 -2  1.3231024517912592E+03       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.Hb_flow
 -2  1.5066503546654935E-02       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.fluidVolume
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.CSen
 -2  1.6078447499109808E+05 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[2].dynBal.ports_H_flow[1]
 -2 -1.5946137253930682E+05 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[2].dynBal.ports_H_flow[2]
 -2    4184                       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.cp_default
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].dynBal.rho_start
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[2].dynBal.computeCSen
 -2  3.0000000000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol1[2].dynBal.state_default.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol1[2].dynBal.state_default.T
 -2  9.9558600000000001E+02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol1[2].dynBal.rho_default
 -2   83680                       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.hStart
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol1[2].dynBal._simplify_mWat_flow
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol1[2].dynBal.mWat_flow_internal
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol2[1].dynBal.energyDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol2[1].dynBal.massDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol2[1].dynBal.substanceDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol2[1].dynBal.traceDynamics
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[1].dynBal.p_start
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol2[1].dynBal.T_start
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.vol2[1].dynBal.X_start[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[1].dynBal.X_start[2]
 -2       1                       1                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[1].dynBal.mSenFac
 -2       1                       0                       0                
  6   769   # dynamicHX.vol2[1].dynBal.initialize_p
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol2[1].dynBal.simplify_mWat_flow
 -2       2                       0                       0                
  6  1282   # dynamicHX.vol2[1].dynBal.nPorts
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[1].dynBal.use_mWat_flow
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[1].dynBal.use_C_flow
 -2  1.2000000000000000E+00       0                  100000                
  6  1280   # dynamicHX.vol2[1].dynBal.medium.d
 -2  3.0763453451564214E+02       1                   10000                
  6  1280   # dynamicHX.vol2[1].dynBal.medium.T
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[1].dynBal.medium.X[2]
 -2 -2.4441415352500371E+04 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[1].dynBal.medium.u
 -2  2.8879594599429981E+02       0                  1.0000000000000000E+07
  6  1280   # dynamicHX.vol2[1].dynBal.medium.R
 -2  2.8790127130676930E-02  1.0000000000000000E-03  2.5000000000000000E-01
  6  1280   # dynamicHX.vol2[1].dynBal.medium.MM
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[1].dynBal.medium.preferredMediumStates
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol2[1].dynBal.medium.standardOrderComponents
 -2  3.4484534515642167E+01       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.medium.T_degC
 -2  1.0132500000000000E+00       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.medium.p_bar
 -2  1.8015280000000002E-02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[1].dynBal.medium.MMX[1]
 -2  2.8965115900000001E-02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[1].dynBal.medium.MMX[2]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[1].dynBal.medium.X_air
 -2  3.4484534515642196E+01       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.medium.dT
 -2 -3.6662123028750555E+05       0                       0                
  2  1296   # dynamicHX.vol2[1].dynBal.U
 -2  7.0702827677723690E-01       0                       0                
  3  1280   # dynamicHX.vol2[1].dynBal.der(U)
 -2      15                       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[1].dynBal.m
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.der(m)
 -2  1.4999999999999999E-01       0                 1.0000000000000000E+100
  2  1296   # dynamicHX.vol2[1].dynBal.mXi[1]
 -2       0                       0                       0                
  3  1280   # dynamicHX.vol2[1].dynBal.der(mXi[1])
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.mb_flow
 -2 -6.5718662381322938E+03       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.Hb_flow
 -2  1.2500000000000000E+01       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.fluidVolume
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.CSen
 -2  2.0259198492995842E+04 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[1].dynBal.ports_H_flow[1]
 -2 -2.6831064731128135E+04 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[1].dynBal.ports_H_flow[2]
 -2  4.4721359549995798E-03       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.ports_mXi_flow[1, 1]
 -2 -4.4721359549995798E-03       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.ports_mXi_flow[2, 1]
 -2  1.0145400000000000E+03       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.cp_default
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[1].dynBal.rho_start
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[1].dynBal.computeCSen
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[1].dynBal.state_default.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol2[1].dynBal.state_default.T
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.vol2[1].dynBal.state_default.X[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[1].dynBal.state_default.X[2]
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[1].dynBal.rho_default
 -2       1                       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.s[1]
 -2  4.5300945000000000E+04       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.hStart
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol2[1].dynBal._simplify_mWat_flow
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol2[1].dynBal.mWat_flow_internal
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol2[2].dynBal.energyDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol2[2].dynBal.massDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol2[2].dynBal.substanceDynamics
 -2       1                       1                       4                
  6  1282   # dynamicHX.vol2[2].dynBal.traceDynamics
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[2].dynBal.p_start
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol2[2].dynBal.T_start
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.vol2[2].dynBal.X_start[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[2].dynBal.X_start[2]
 -2       1                       1                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[2].dynBal.mSenFac
 -2       1                       0                       0                
  6   769   # dynamicHX.vol2[2].dynBal.initialize_p
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol2[2].dynBal.simplify_mWat_flow
 -2       2                       0                       0                
  6  1282   # dynamicHX.vol2[2].dynBal.nPorts
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[2].dynBal.use_mWat_flow
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[2].dynBal.use_C_flow
 -2  1.2000000000000000E+00       0                  100000                
  6  1280   # dynamicHX.vol2[2].dynBal.medium.d
 -2  3.1048092064947241E+02       1                   10000                
  6  1280   # dynamicHX.vol2[2].dynBal.medium.T
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[2].dynBal.medium.X[2]
 -2 -2.1553642764284243E+04 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[2].dynBal.medium.u
 -2  2.8879594599429981E+02       0                  1.0000000000000000E+07
  6  1280   # dynamicHX.vol2[2].dynBal.medium.R
 -2  2.8790127130676930E-02  1.0000000000000000E-03  2.5000000000000000E-01
  6  1280   # dynamicHX.vol2[2].dynBal.medium.MM
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[2].dynBal.medium.preferredMediumStates
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol2[2].dynBal.medium.standardOrderComponents
 -2  3.7330920649472432E+01       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.medium.T_degC
 -2  1.0132500000000000E+00       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.medium.p_bar
 -2  1.8015280000000002E-02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[2].dynBal.medium.MMX[1]
 -2  2.8965115900000001E-02       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[2].dynBal.medium.MMX[2]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[2].dynBal.medium.X_air
 -2  3.7330920649472425E+01       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.medium.dT
 -2 -3.2330464146426367E+05       0                       0                
  2  1296   # dynamicHX.vol2[2].dynBal.U
 -2  5.9593392491378836E+00       0                       0                
  3  1280   # dynamicHX.vol2[2].dynBal.der(U)
 -2      15                       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[2].dynBal.m
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.der(m)
 -2  1.4999999999999999E-01       0                 1.0000000000000000E+100
  2  1296   # dynamicHX.vol2[2].dynBal.mXi[1]
 -2       0                       0                       0                
  3  1280   # dynamicHX.vol2[2].dynBal.der(mXi[1])
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.mb_flow
 -2 -1.2914511621623533E+03       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.Hb_flow
 -2  1.2500000000000000E+01       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.fluidVolume
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.CSen
 -2  2.6831064731128135E+04 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[2].dynBal.ports_H_flow[1]
 -2 -2.8122515893290489E+04 -1.0000000000000000E+08  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[2].dynBal.ports_H_flow[2]
 -2  4.4721359549995798E-03       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.ports_mXi_flow[1, 1]
 -2 -4.4721359549995798E-03       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.ports_mXi_flow[2, 1]
 -2  1.0145400000000000E+03       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.cp_default
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[2].dynBal.rho_start
 -2       0                       0                       0                
  6  1281   # dynamicHX.vol2[2].dynBal.computeCSen
 -2  1.0132500000000000E+05       0                  1.0000000000000000E+08
  6  1280   # dynamicHX.vol2[2].dynBal.state_default.p
 -2  2.9314999999999998E+02       1                   10000                
  6  1280   # dynamicHX.vol2[2].dynBal.state_default.T
 -2  1.0000000000000000E-02       0                       1                
  6  1280   # dynamicHX.vol2[2].dynBal.state_default.X[1]
 -2  9.8999999999999999E-01       0                       1                
  6  1280   # dynamicHX.vol2[2].dynBal.state_default.X[2]
 -2  1.2000000000000000E+00       0                 1.0000000000000000E+100
  6  1280   # dynamicHX.vol2[2].dynBal.rho_default
 -2       1                       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.s[1]
 -2  4.5300945000000000E+04       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.hStart
 -2       1                       0                       0                
  6  1281   # dynamicHX.vol2[2].dynBal._simplify_mWat_flow
 -2       0                       0                       0                
  6  1280   # dynamicHX.vol2[2].dynBal.mWat_flow_internal


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(565,184)
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Needed to connect to conditional connector [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Fixed value of composition [kg/kg]
Height of ramps
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal
Output = offset for time < startTime [s]
Connector of Real output signal
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Needed to connect to conditional connector [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Fixed value of composition [kg/kg]
Height of ramps
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal
Output = offset for time < startTime [s]
Connector of Real output signal
Constant output value
Constant output value
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Amplitude of trapezoid
Rising duration of trapezoid [s]
Width duration of trapezoid [s]
Falling duration of trapezoid [s]
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal
Output = offset for time < startTime [s]
End time of rising phase within one period [s]
End time of width phase within one period [s]
End time of falling phase within one period [s]
Start time of current period [s]
Period count [:#(type=Integer)]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 1 [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 2 [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Nominal mass flow rate [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a1 and port_b1 [Pa|Pa]
Pressure difference between port_a2 and port_b2 [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Spatial segmentation [:#(type=Integer)]
Time constant at nominal flow [s]
Time constant at nominal flow [s]
= true, use homotopy method [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Heat flow rate into medium 1 [W]
Heat flow rate into medium 2 [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Temperature of the fluid [K|degC]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Temperature of the fluid [K|degC]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Temperature of the fluid [K|degC]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Temperature of the fluid [K|degC]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Start value for outflowing enthalpy [J/kg]
Time constant of heat capacity at nominal heat flow and temperature difference. [s]
Temperature difference at nominal conditions (used to calculate Gc) [K,]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Temperature difference at nominal conditions (used to calculate Gc) [W]
Start value of temperature [K|degC]
Signal representing the convective thermal conductance in [W/K] [W/K]
Signal representing the convective thermal conductance in [W/K] [W/K]
= solid.T - fluid.T [K,]
= solid.T - fluid.T [K,]
= solid.T - fluid.T [K,]
= solid.T - fluid.T [K,]
Connector of Boolean input signal [:#(type=Boolean)]
Connector of second Real input signal
Connector of Boolean input signal [:#(type=Boolean)]
Connector of second Real input signal
Value of Real output
Value of Real output
[:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems) [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate
Inverse of tau [s-1]
Temperature of the passing fluid [K|degC]
der(Temperature of the passing fluid) [K/s]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauHeaTra [1/s]
Ratio of tau
Medium temperature to which the sensor is exposed [K|degC]
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems) [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate
Inverse of tau [s-1]
Temperature of the passing fluid [K|degC]
der(Temperature of the passing fluid) [K/s]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauHeaTra [1/s]
Ratio of tau
Medium temperature to which the sensor is exposed [K|degC]
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
Value of Boolean output [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]

